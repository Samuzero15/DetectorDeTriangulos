/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Nucleo.Arista;
import Nucleo.Vertice;
import java.util.ArrayList;
import java.util.SortedSet;

/**
 *
 * @author Samuzero15
 */
public class PanelPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form PanelPrincipal
     */
    public PanelPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lienzo1 = new UI.Lienzo();
        scrollPanelLog = new javax.swing.JScrollPane();
        log = new javax.swing.JTextPane();
        panelHerramientas = new javax.swing.JPanel();
        analiza_btn = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        panelDeControl = new javax.swing.JPanel();
        nuevo_btn = new javax.swing.JButton();
        enlazar_btn = new javax.swing.JButton();
        desenlazar_btn = new javax.swing.JButton();
        eliminar_btn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        panelMensaje = new javax.swing.JPanel();
        miniMensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Triangulos en grafos?");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lienzo1.setBackground(new java.awt.Color(204, 204, 255));
        lienzo1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0)));
        lienzo1.setRequestFocusEnabled(false);
        lienzo1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mueveVertice(evt);
            }
        });
        lienzo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lienzo1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                salvaPosicion(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                colocaPosicion(evt);
            }
        });

        javax.swing.GroupLayout lienzo1Layout = new javax.swing.GroupLayout(lienzo1);
        lienzo1.setLayout(lienzo1Layout);
        lienzo1Layout.setHorizontalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 317, Short.MAX_VALUE)
        );
        lienzo1Layout.setVerticalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        getContentPane().add(lienzo1, gridBagConstraints);

        log.setEditable(false);
        log.setBackground(new java.awt.Color(222, 222, 222));
        scrollPanelLog.setViewportView(log);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(scrollPanelLog, gridBagConstraints);

        panelHerramientas.setLayout(new java.awt.GridBagLayout());

        analiza_btn.setText("Analizar Triangulos");
        analiza_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculaTriangulos(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.5;
        panelHerramientas.add(analiza_btn, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Herramientas de vertices", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        jPanel3.setLayout(new java.awt.BorderLayout());

        panelDeControl.setLayout(new java.awt.GridLayout(2, 2));

        nuevo_btn.setText("Nuevo");
        nuevo_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activar_nuevoVertice(evt);
            }
        });
        panelDeControl.add(nuevo_btn);

        enlazar_btn.setText("Enlazar");
        enlazar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enlazar_btnActionPerformed(evt);
            }
        });
        panelDeControl.add(enlazar_btn);

        desenlazar_btn.setText("Desenlazar");
        desenlazar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destruyeEnlace_btn(evt);
            }
        });
        panelDeControl.add(desenlazar_btn);

        eliminar_btn.setText("Eliminar");
        eliminar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_btnActionPerformed(evt);
            }
        });
        panelDeControl.add(eliminar_btn);

        jPanel3.add(panelDeControl, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Vertices", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        jCheckBox1.setText("Ver los vertices");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambioDeVista_checkBox(evt);
            }
        });
        jPanel4.add(jCheckBox1);

        jButton1.setText("Ver matriz de adyacencia");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test(evt);
            }
        });
        jPanel4.add(jButton1);

        jTabbedPane1.addTab("Opciones", jPanel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        panelHerramientas.add(jTabbedPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(panelHerramientas, gridBagConstraints);

        panelMensaje.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(102, 102, 102)));
        panelMensaje.setPreferredSize(new java.awt.Dimension(529, 30));
        panelMensaje.setLayout(new java.awt.GridBagLayout());

        miniMensaje.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        panelMensaje.add(miniMensaje, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(panelMensaje, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    final int DEL1 = 5;
    final int DEL2 = 4;
    final int ADD = 1;
    final int LINK1 = 2;
    final int LINK2 = 3;
    final int UNLINK1 = 6;
    final int UNLINK2 = 7;
    final int DELTA = 8;

    
    int accion  = 0;
    
    Vertice v1 = null, v2 = null;
    Arista a1 = null, a2 = null;
    
    private void lienzo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzo1MouseClicked
        Vertice v;
        Arista a;
        
        String msg = "";
        
        switch(accion)
        {
            case ADD:
                //char put = (char) cuenta;
                //String fuck = "" + put;
                lienzo1.figura.nuevoVertice(evt.getX(), evt.getY());
                msg = "Vertice "+/* + fuck + */" creado en el grafo. " + Vertice.getCuenta();

                accion = 0;
                break;
            case DEL1:
                v1 = lienzo1.getVerticeEnElLienzo(evt.getPoint());
                if(v1 != null){
                 lienzo1.seleccionarA(v1);
                 msg = "Vertice " + v1.getTag() + " seleccionado. Click otra vez si esta seguro.";
                 accion = DEL2;
                }
                else { 
                 msg = "Aqui no hay un vertice. ";
                }
                break;
            case DEL2:
                v2 = lienzo1.getVerticeEnElLienzo(evt.getPoint());
                if(v2 != null && v1.equals(v2)){
                 lienzo1.desSeleccionarTodo();
                 lienzo1.figura.eliminaVertice(v2.getTag());
                 msg = "Vertice " + v1.getTag() + " eliminado.";
                 accion = 0;
                }
                else { 
                 msg = "Ese no?, Bueno elige otro. ";
                 lienzo1.desSeleccionarTodo();
                 accion = DEL1;
                }
                break;
            case LINK1:
                v1 = lienzo1.getVerticeEnElLienzo(evt.getPoint());
                if(v1 != null){
                 lienzo1.seleccionarA(v1);
                 msg = "Vertice " + v1.getTag() + " seleccionado. Escoge otro para enlazar.";
                 accion = LINK2;
                }
                else msg = "Aqui no hay un vertice.";
                break;
            case LINK2:
                v2 = lienzo1.getVerticeEnElLienzo(evt.getPoint());
                if(v2 != null){
                 lienzo1.seleccionarA(v2);
                 lienzo1.figura.añadeArista(v1.getTag(), v2.getTag());
                 msg = "Vertices  " + v1.getTag() + " y " + v2.getTag() + " enlazados satisfactoriamente.";
                 accion = 0;
                }
                else msg = "Aqui no hay un vertice.";
                break;
            case UNLINK1:
                a1 = lienzo1.getAristaEnElLienzo(evt.getPoint());
                if(a1 != null){
                 lienzo1.seleccionarA(a1);
                 msg = "Arista " + a1.getTag() + " seleccionada, click otra vez para eliminar.";
                 accion = UNLINK2;
                }
                else msg = "Aqui no hay una arista.";
                break;
            case UNLINK2:
                a2 = lienzo1.getAristaEnElLienzo(evt.getPoint());
                if(a2 != null && a1.equals(a2)){
                 lienzo1.figura.eliminaArista(a1.getTag());
                 msg = "Arista " + a1.getTag() + " eliminado satisfactoriamente.";
                 accion = 0;
                }
                else msg = "Aqui no hay una arista.";
                break;
            default:
                lienzo1.desSeleccionarTodo();
                v = lienzo1.getVerticeEnElLienzo(evt.getPoint());
                a = lienzo1.getAristaEnElLienzo(evt.getPoint());
                if(v != null){ 
                 lienzo1.seleccionarA(v);
                 msg =  "Vertice " + v.toString();
                }
                else if(a != null){ 
                 lienzo1.seleccionarA(a);
                 msg =  "Arista " + a.toString();
                }
                break;
        }
        lienzo1.repaint();
        miniMensaje.setText(msg);
    }//GEN-LAST:event_lienzo1MouseClicked

    private void activar_nuevoVertice(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activar_nuevoVertice
       accion = ADD;
       miniMensaje.setText("Click en cualquier parte del panel principal para colocar el vertice.");
    }//GEN-LAST:event_activar_nuevoVertice

    private void eliminar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_btnActionPerformed
       accion = DEL1;
       miniMensaje.setText("Selecciona el vertice que no quieres.");
    }//GEN-LAST:event_eliminar_btnActionPerformed

    private void enlazar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enlazar_btnActionPerformed
       accion = LINK1;
       miniMensaje.setText("Selecciona el primer vertice.");
    }//GEN-LAST:event_enlazar_btnActionPerformed
    
    double x, y;
    
    Vertice vMueve;
    Arista aMueve;
    
    private void salvaPosicion(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salvaPosicion
        if(accion == 0){
        x = evt.getX();
        y = evt.getY();
        
        vMueve = lienzo1.getVerticeEnElLienzo(evt.getPoint());   
        aMueve = lienzo1.getAristaEnElLienzo(evt.getPoint());
        if(vMueve != null)
            lienzo1.seleccionarA(vMueve);
        
        else if(aMueve != null)
        {
            Vertice i = aMueve.getvA();
            Vertice f = aMueve.getvB();
            lienzo1.seleccionarA(aMueve);
            lienzo1.seleccionarA(i);
            lienzo1.seleccionarA(f);
            lienzo1.repaint();
        }
        lienzo1.repaint();
        }
    }//GEN-LAST:event_salvaPosicion

    private void mueveVertice(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mueveVertice
        if(accion == 0){
        double dx = (evt.getX() - x);
        double dy = (evt.getY() - y);
        if(vMueve != null){
            vMueve.getHit().x += dx;
          vMueve.getHit().y += dy;
          lienzo1.figura.actualizarVertice(vMueve.getTag(), vMueve);
          lienzo1.seleccionarA(vMueve);
        }
        else if(aMueve != null){
            Vertice i = aMueve.getvA();
            Vertice f = aMueve.getvB();
            
            aMueve.mueve(dx, dy);
            lienzo1.figura.actualizarArista(aMueve.getTag(), aMueve);
            lienzo1.figura.actualizarVertice(i.getTag(), i);
            lienzo1.figura.actualizarVertice(f.getTag(), f);
          lienzo1.seleccionarA(i);
          lienzo1.seleccionarA(f);
        }
        lienzo1.repaint();
        x = evt.getX();
        y = evt.getY();
        }
    }//GEN-LAST:event_mueveVertice

    private void colocaPosicion(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colocaPosicion
        if(accion == 0)
        {
          lienzo1.desSeleccionarTodo();
          lienzo1.repaint();
        }
    }//GEN-LAST:event_colocaPosicion

    private void destruyeEnlace_btn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destruyeEnlace_btn
        accion = UNLINK1;
        miniMensaje.setText("Selecciona la arista a eliminar.");
    }//GEN-LAST:event_destruyeEnlace_btn

    private void cambioDeVista_checkBox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambioDeVista_checkBox
        lienzo1.setVerticesVisibles(jCheckBox1.isSelected());
        lienzo1.repaint();
    }//GEN-LAST:event_cambioDeVista_checkBox

    private void test(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test
        
        int[][] matAdj = lienzo1.figura.matrizDeAdjacencia();
        
        String msg = "Matriz de adjacencia: \n";
        
        for(int i = 0; i < matAdj.length; i++)
        {
            for(int j = 0; j < matAdj[0].length; j++)
                msg += " " + matAdj[i][j];
            msg += "\n";
        }
        
        log.setText(msg);
    }//GEN-LAST:event_test

    private void calculaTriangulos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculaTriangulos
        String msg = "";
        ArrayList<SortedSet<Vertice>> triangulos = lienzo1.figura.cuantosTriangulosHay();
        
        msg += "Hay " + triangulos.size() + " en la figura!";
        msg += "\nRevisa en los siguientes conjuntos: ";
        for(SortedSet<Vertice> t : triangulos){
            msg += "\n\t" + t.toString();
        }
        log.setText(msg);
    }//GEN-LAST:event_calculaTriangulos


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analiza_btn;
    private javax.swing.JButton desenlazar_btn;
    private javax.swing.JButton eliminar_btn;
    private javax.swing.JButton enlazar_btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private UI.Lienzo lienzo1;
    private javax.swing.JTextPane log;
    private javax.swing.JLabel miniMensaje;
    private javax.swing.JButton nuevo_btn;
    private javax.swing.JPanel panelDeControl;
    private javax.swing.JPanel panelHerramientas;
    private javax.swing.JPanel panelMensaje;
    private javax.swing.JScrollPane scrollPanelLog;
    // End of variables declaration//GEN-END:variables
}
